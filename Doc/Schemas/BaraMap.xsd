<?xml version="1.0" encoding="utf-8"?>
<xs:schema
attributeFormDefault="unqualified"
elementFormDefault="qualified"
targetNamespace="https://github.com/RocherKong/Bara/schemas/BaraMap.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="https://github.com/RocherKong/Bara/schemas/BaraMap.xsd"
    xmlns:vs="http://schemas.microsoft.com/Visual-Studio-Intellisense"
    vs:friendlyname="BaraMap Configuration Schema"
    vs:ishtmlschema="false"
    vs:iscasesensitive="true"
    vs:requireattributequotes="true"
    vs:defaultnamespacequalifier=""
     vs:defaultnsprefix=""
    >
  <xs:element name="Cache">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
        <xs:element name="Parameter">
          <xs:complexType>
            <xs:attribute name="Key" type="xs:string" use="required" />
            <xs:attribute name="Value" type="xs:string" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="FlushInterval" maxOccurs="1">
          <xs:complexType>
            <xs:attribute name="Hours" type="xs:unsignedByte" use="optional" />
            <xs:attribute name="Minutes" type="xs:unsignedByte" use="optional" />
            <xs:attribute name="Seconds" type="xs:unsignedByte" use="optional" />
          </xs:complexType>
        </xs:element>
        <xs:element name="FlushOnExecute">
          <xs:complexType>
            <xs:attribute name="Statement" type="xs:string" use="required" />
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:attribute name="Id" type="xs:string" use="required" />
      <xs:attribute name="Type" use="required">
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Lru"/>
            <xs:enumeration value="Fifo"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  <xs:element name="Caches">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="Cache" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Include">
    <xs:complexType mixed="true">
      <xs:attribute name="RefId" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Case">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="CompareValue" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Default">
    <xs:complexType mixed="true">
      <xs:choice maxOccurs="1" minOccurs="0">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Switch">
    <xs:complexType mixed="true">
      <xs:sequence>
        <xs:element ref="Case" minOccurs="1" maxOccurs="unbounded"/>
        <xs:element ref="Default" minOccurs="0" maxOccurs="1"/>
      </xs:sequence>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsEmpty">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsEqual">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
      <xs:attribute name="CompareValue" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsGreaterEqual">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
      <xs:attribute name="CompareValue" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsGreaterThan">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
      <xs:attribute name="CompareValue" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsLessEqual">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
      <xs:attribute name="CompareValue" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsLessThan">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
      <xs:attribute name="CompareValue" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsNotEmpty">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
      <xs:attribute name="In" type="xs:boolean" use="optional" default="false"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="IsNotEqual">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
      <xs:attribute name="CompareValue" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsNotNull">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
      <xs:attribute name="In" type="xs:boolean" use="optional" default="false"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="IsNull">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsTrue">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsFalse">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Where">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Dynamic">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
    </xs:complexType>
  </xs:element>
  <xs:element name="IsProperty">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Prepend" type="xs:string" use="optional" />
      <xs:attribute name="Property" type="xs:string" use ="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Statement">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element ref="IsEmpty" />
        <xs:element ref="IsEqual" />
        <xs:element ref="IsGreaterEqual" />
        <xs:element ref="IsGreaterThan" />
        <xs:element ref="IsLessEqual" />
        <xs:element ref="IsLessThan" />
        <xs:element ref="IsNotEmpty" />
        <xs:element ref="IsNotEqual" />
        <xs:element ref="IsNotNull" />
        <xs:element ref="IsNull" />
        <xs:element ref="Include" />
        <xs:element ref="Switch" />
        <xs:element ref="IsTrue" />
        <xs:element ref="IsFalse" />
        <xs:element ref="Where" />
        <xs:element ref="Dynamic" />
        <xs:element ref="IsProperty"/>
      </xs:choice>
      <xs:attribute name="Id" type="xs:string" use="required" />
      <xs:attribute name="Cache" type="xs:string" use="optional" />
    </xs:complexType>
  </xs:element>
  <xs:element name="Statements">
    <xs:complexType mixed="true">
      <xs:choice minOccurs="1" maxOccurs="unbounded">
        <xs:element ref="Statement"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="BaraMap">
    <xs:complexType mixed="true">
      <xs:all>
        <xs:element ref="Caches" minOccurs="0" maxOccurs="1"/>
        <xs:element ref="Statements" minOccurs="0" maxOccurs="1"/>
      </xs:all>
      <xs:attribute name="Scope" type="xs:string" use="required" />
    </xs:complexType>
  </xs:element>
</xs:schema>